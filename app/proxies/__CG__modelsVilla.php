<?php

namespace DoctrineProxies\__CG__\models;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Villa extends \models\Villa implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array('title' => NULL, 'slug' => NULL, 'intro' => NULL, 'text' => NULL, 'booking_info' => NULL, 'view_status' => NULL, 'chg_date' => NULL, 'path' => NULL);



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->title, $this->slug, $this->intro, $this->text, $this->booking_info, $this->view_status, $this->chg_date, $this->path);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', array($name));

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'title', 'slug', 'intro', 'text', 'booking_info', 'view_status', 'pub_date', 'chg_date', '' . "\0" . 'models\\Villa' . "\0" . 'album', '' . "\0" . 'models\\Villa' . "\0" . 'file', 'path', 'booking');
        }

        return array('__isInitialized__', 'id', 'pub_date', '' . "\0" . 'models\\Villa' . "\0" . 'album', '' . "\0" . 'models\\Villa' . "\0" . 'file', 'booking');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Villa $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->title, $this->slug, $this->intro, $this->text, $this->booking_info, $this->view_status, $this->chg_date, $this->path);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', array($file));

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', array());

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpload', array());

        return parent::preUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function upload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', array());

        return parent::upload();
    }

    /**
     * {@inheritDoc}
     */
    public function removeUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUpload', array());

        return parent::removeUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntro($intro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntro', array($intro));

        return parent::setIntro($intro);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntro()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntro', array());

        return parent::getIntro();
    }

    /**
     * {@inheritDoc}
     */
    public function setText($text)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setText', array($text));

        return parent::setText($text);
    }

    /**
     * {@inheritDoc}
     */
    public function getText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getText', array());

        return parent::getText();
    }

    /**
     * {@inheritDoc}
     */
    public function setViewStatus($viewStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setViewStatus', array($viewStatus));

        return parent::setViewStatus($viewStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getViewStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViewStatus', array());

        return parent::getViewStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setPubDate($pubDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPubDate', array($pubDate));

        return parent::setPubDate($pubDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPubDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPubDate', array());

        return parent::getPubDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setChgDate($chgDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChgDate', array($chgDate));

        return parent::setChgDate($chgDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getChgDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChgDate', array());

        return parent::getChgDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', array($path));

        return parent::setPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', array());

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlbum(\models\Album $album = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlbum', array($album));

        return parent::setAlbum($album);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlbum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlbum', array());

        return parent::getAlbum();
    }

    /**
     * {@inheritDoc}
     */
    public function addBooking(\models\Booking $booking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBooking', array($booking));

        return parent::addBooking($booking);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBooking(\models\Booking $booking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBooking', array($booking));

        return parent::removeBooking($booking);
    }

    /**
     * {@inheritDoc}
     */
    public function getBooking()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBooking', array());

        return parent::getBooking();
    }

    /**
     * {@inheritDoc}
     */
    public function setBookingInfo($bookingInfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBookingInfo', array($bookingInfo));

        return parent::setBookingInfo($bookingInfo);
    }

    /**
     * {@inheritDoc}
     */
    public function getBookingInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookingInfo', array());

        return parent::getBookingInfo();
    }

}
